<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bSubirRemitoCargaPdf.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>